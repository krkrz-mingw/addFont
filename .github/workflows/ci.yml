name: Continuous Integration
on:
  push:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - "**.hpp"
      - "**.build"
      - "**.in"
      - "**.yml"
  pull_request:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - "**.hpp"
      - "**.build"
      - "**.in"
      - "**.yml"

jobs:
  build-win32-gcc:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target_arch: ["intel32", "intel64"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: sudo apt-get update
      - run: sudo apt-get install build-essential mingw-w64 nasm
      - run: sudo update-alternatives --set i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix
      - run: make TARGET_ARCH=${{ matrix.target_arch }} ARCHIVE=${GITHUB_REPOSITORY#*/}.${{ matrix.target_arch }}.gcc.7z archive -j$(getconf _NPROCESSORS_ONLN)
      - uses: actions/upload-artifact@master
        with:
          name: binary-win32-${{ matrix.target_arch }}-gcc
          path: ./**.${{ matrix.target_arch }}.7z

  create-release:
    needs: [build-win32-gcc]
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download win32 intel32 gcc artifact
      uses: actions/download-artifact@v1
      with:
        name: binary-win32-intel32-gcc

    - name: Download win32 intel64 gcc artifact
      uses: actions/download-artifact@v1
      with:
        name: binary-win32-intel64-gcc

    - name: Create release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: "${{ contains(github.ref, '-rc') }}"
        files: |
          binary-win32-intel32-gcc/*
          binary-win32-intel64-gcc/*
